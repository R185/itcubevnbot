import telebot
from telebot import types
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup

import useful_vars
cancel_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
cancel_markup.add(types.KeyboardButton("–û—Ç–º–µ–Ω–∞ ‚ùå"))
markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
item1 = types.KeyboardButton("–ü—Ä–æ–≥—Ä–∞–º–º—ã üìÉ")
item3 = types.KeyboardButton("–ü–µ—Ä–µ—á–µ–Ω—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ üíº")
item5 = types.KeyboardButton("C–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π üë®‚Äçüè´")
item6 = types.KeyboardButton("–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã üÜò")
item7 = types.KeyboardButton("–ú—ã –≤ —Å–æ—Ü—Å–µ—Ç—è—Öüì≤")
item8 = types.KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ —Ä–∞–±–æ—Ç–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞üìù")
markup.add(item1, item3)
markup.add(item5, item6)
markup.add(item7, item8)
markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
ited1 = types.KeyboardButton("–î–æ 14 –ª–µ—Ç üß¢")
ited2 = types.KeyboardButton("–û—Ç 14 –ª–µ—Ç üï∂")
ited3 = types.KeyboardButton("–û—Ç–º–µ–Ω–∞ ‚ùå")
markup2.add(ited1)
markup2.add(ited2)
markup2.add(ited3)
markup_admin = types.ReplyKeyboardMarkup(resize_keyboard=True)
answer_key = types.KeyboardButton("–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å üë®")
markup_admin.add(answer_key)
markup_directions = types.ReplyKeyboardMarkup(resize_keyboard=True)


admin = 1269837862

def to_int(var):
    try:
        int(var)
    except Exception:
        return False
    return True

bot = telebot.TeleBot('5354654063:AAFJsCbnLDJfsF1nXTQc9j1axshkTU3PLac')


@bot.message_handler(commands=["start"])
def start(m):
    if m.chat.id == admin:
        bot.send_message(m.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ IT-Cube 36 —à–∫–æ–ª—ã –í–µ–ª–∏–∫–æ–≥–æ –ù–æ–≤–≥–æ—Ä–æ–¥–∞. \n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —á—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å))) ', reply_markup=markup_admin)
    else:
        bot.send_message(m.chat.id,
                         '–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ IT-Cube 36 —à–∫–æ–ª—ã –í–µ–ª–∏–∫–æ–≥–æ –ù–æ–≤–≥–æ—Ä–æ–¥–∞. \n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —á—Ç–æ–±—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å))) ',
                         reply_markup=markup)
    return


@bot.message_handler(func=lambda message: "–ø—Ä–æ–≥—Ä–∞–º–º" in message.text.lower())
def program_view_level(m):
    bot.send_message(m.chat.id,
                         '–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç, —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã(!): ', reply_markup=cancel_markup)
    bot.register_next_step_handler(m, age_chosen)
    return


s = 0


def age_chosen(m):
    global s
    global markup_directions
    if "–æ—Ç–º–µ–Ω–∞" in m.text.lower():
        bot.send_message(m.chat.id, "–û—Ç–º–µ–Ω–µ–Ω–æ!", reply_markup=markup)
        return
    elif to_int(m.text):
        s = int(m.text)
    else:
        bot.send_message(m.chat.id,
                         "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞...")
        bot.register_next_step_handler(m, age_chosen)
        return
    not_enough_old = True


    markup_directions = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for i in useful_vars.game_dev:
        if s in i[1]:
            markup_directions.add(types.KeyboardButton(i[0]))
            not_enough_old = False

    for i in useful_vars.prog_mains:
        if s in i[1]:
            markup_directions.add(types.KeyboardButton(i[0]))
            not_enough_old = False

    for i in useful_vars.practical_prog:
        if s in i[1]:
            markup_directions.add(types.KeyboardButton(i[0]))
            not_enough_old = False

    for i in useful_vars.media:
        if s in i[1]:
            markup_directions.add(types.KeyboardButton(i[0]))
            not_enough_old = False


    for i in useful_vars.tech_construct:
        if s in i[1]:
            markup_directions.add(types.KeyboardButton(i[0]))
            not_enough_old = False


    for i in useful_vars.it_safety:
        if s in i[1]:
            markup_directions.add(types.KeyboardButton(i[0]))
            not_enough_old = False

    markup_directions.add(types.KeyboardButton("–ù–∞–∑–∞–¥ ‚¨Ö"))
    markup_directions.add(types.KeyboardButton('–û—Ç–º–µ–Ω–∞ ‚ùå'))
    if not_enough_old == False:
        bot.send_message(m.chat.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –≤–∞—Å –∫—É—Ä—Å—ã:", reply_markup=markup_directions)
        bot.register_next_step_handler(m, show_fac)
    else:
        bot.send_message(m.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –Ω–∞—Å –Ω–µ—Ç –∫—É—Ä—Å–æ–≤ –¥–ª—è –≤–∞—à–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞...", reply_markup=markup)
    return


def show_fac(m):
    send_something = False
    markup_direction = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup_direction.add(types.KeyboardButton("–ù–∞–∑–∞–¥‚¨Ö"), types.KeyboardButton("–ü–æ—Å—Ç—É–ø–∏—Ç—å‚úÖ"))
    if "–Ω–∞–∑–∞–¥" in m.text.lower():
        bot.send_message(m.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç, —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã(!): ", reply_markup=cancel_markup)
        bot.register_next_step_handler(m, age_chosen)
        return
    elif "–æ—Ç–º–µ–Ω–∞" in m.text.lower():
        bot.send_message(m.chat.id, "–û—Ç–º–µ–Ω–µ–Ω–æ!", reply_markup=markup)
        return
    for i in useful_vars.game_dev:
        if i[0].lower() == m.text.lower():
            send_something = True
            if len(i) == 3:
                bot.send_message(m.chat.id,
                                  "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")" + "\n" + i[2],
                                    parse_mode="Markdown", reply_markup=markup_direction)
            else:
                bot.send_message(m.chat.id, "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")",
                                     parse_mode="Markdown", reply_markup=markup_direction)
            bot.register_next_step_handler(m, contin)

    for i in useful_vars.prog_mains:
        if i[0].lower() == m.text.lower():
            send_something = True
            if len(i) == 3:
                bot.send_message(m.chat.id,
                                     "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")" + "\n" + i[2],
                                     parse_mode="Markdown", reply_markup=markup_direction)
            else:
                bot.send_message(m.chat.id,
                                     "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")",
                                     parse_mode="Markdown", reply_markup=markup_direction)
            bot.register_next_step_handler(m, contin)
    for i in useful_vars.practical_prog:
        if i[0].lower() == m.text.lower():
            send_something = True
            if len(i) == 3:
                bot.send_message(m.chat.id,
                                     "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")" + "\n" + i[2],
                                     parse_mode="Markdown", reply_markup=markup_direction)
            else:
                bot.send_message(m.chat.id,
                                     "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")",
                                     parse_mode="Markdown", reply_markup=markup_direction)
            bot.register_next_step_handler(m, contin)
    for i in useful_vars.tech_construct:
        if i[0].lower() == m.text.lower():
            send_something = True
            if len(i) == 3:
                bot.send_message(m.chat.id,
                                     "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")" + "\n" + i[2],
                                     parse_mode="Markdown", reply_markup=markup_direction)
            else:
                bot.send_message(m.chat.id,
                                     "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")",
                                     parse_mode="Markdown", reply_markup=markup_direction)
            bot.register_next_step_handler(m, contin)
    for i in useful_vars.it_safety:
        if i[0].lower() == m.text.lower():
            send_something = True
            if len(i) == 3:
                bot.send_message(m.chat.id,
                                    "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")" + "\n" + i[2],
                                     parse_mode="Markdown", reply_markup=markup_direction)
            else:
                bot.send_message(m.chat.id,
                                     "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")",
                                     parse_mode="Markdown", reply_markup=markup_direction)
            bot.register_next_step_handler(m, contin)

    for i in useful_vars.media:
        if i[0].lower() == m.text.lower():
            send_something = True
            if len(i) == 3:
                bot.send_message(m.chat.id,
                                     "*" + i[0] + "*\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")" + "\n" + i[2],
                                     parse_mode="Markdown", reply_markup=markup_direction)
            else:
                bot.send_message(m.chat.id,
                                     "*" + i[0] + "*\n" + "\n" + "(" + str(i[1][0]) + "-" + str(i[1][-1]) + ")",
                                     parse_mode="Markdown", reply_markup=markup_direction)
            bot.register_next_step_handler(m, contin)
    if not send_something:
        bot.send_message(m.chat.id,
                         "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞...")
        bot.register_next_step_handler(m, show_fac)
    return


def contin(m):
    markup_direction = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup_direction.add(types.KeyboardButton("–ù–∞–∑–∞–¥‚¨Ö"), types.KeyboardButton("–ü–æ—Å—Ç—É–ø–∏—Ç—å‚úÖ"))
    if "–ø–æ—Å—Ç—É–ø–∏—Ç" in m.text.lower():
        doc_choose(m)
        return
    elif "–Ω–∞–∑–∞–¥" in m.text.lower():
        bot.send_message(m.chat.id, "–ù–∞–∑–∞–¥‚óÄ", reply_markup=markup_directions)
        bot.register_next_step_handler(m, show_fac)
        return
    else:
        bot.send_message(m.chat.id,
                         "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª...", reply_markup=markup_direction)
        bot.register_next_step_handler(m, contin)
        return


@bot.message_handler(func=lambda message: "–ø–µ—Ä–µ—á–µ–Ω" in message.text.lower())
def doc_choose(m):
    bot.send_message(m.chat.id,
                         '–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞:', reply_markup=markup2)
    bot.register_next_step_handler(m, age_choosen2)
    return


def age_choosen2(m):
    if "–æ—Ç–º–µ–Ω" in m.text.lower():
        bot.send_message(m.chat.id, "–û—Ç–º–µ–Ω–µ–Ω–æ ‚ùå", reply_markup=markup)
        return
    elif "–æ—Ç" in m.text.lower():
        file = open("Soglasie_na_obrabotku_dannyh_nesovershennoletnego_starshe_14_let.docx", "rb")
        file2 = open("Zayv.pdf", "rb")
        bot.send_message(m.chat.id, '–î–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è - —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (—Å—Ç–∞—Ä—à–µ 14 –ª–µ—Ç) –∏ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ. \n\n–ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Ö –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –≤–∞—Ö—Ç–µ –ú–ê–û–£ "–®–∫–æ–ª–∞ ‚Ññ36" –∏–ª–∏ –≤ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ –ø–æ—á—Ç–µ itcube@3653.ru ', reply_markup=markup)
        bot.send_document(m.chat.id, file)
        bot.send_document(m.chat.id, file2)
        return
    elif "–¥–æ" in m.text.lower():
        file = open("Soglasie_na_obrabotku_ot_dannyh_zakonnogo_predstavitelya_(mladshe_14).docx", "rb")
        file2 = open("Zayv.pdf", 'rb')
        bot.send_message(m.chat.id,
                         '–î–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è - —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–º–ª–∞–¥—à–µ 14 –ª–µ—Ç) –∏ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ. \n\n–ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Ö –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –≤–∞—Ö—Ç–µ –ú–ê–û–£ "–®–∫–æ–ª–∞ ‚Ññ36" –∏–ª–∏ –≤ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ –ø–æ—á—Ç–µ itcube@3653.ru', reply_markup=markup)
        bot.send_document(m.chat.id, file)
        bot.send_document(m.chat.id, file2)
        return
    else:
        bot.send_message(m.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞...")
        bot.register_next_step_handler(m, age_choosen2)
        return


@bot.callback_query_handler(func=None)
def process_callback_button1(callback_query: types.CallbackQuery):
    bot.delete_message(callback_query.from_user.id, callback_query.message.message_id)
    i = int(callback_query.data[-1])
    if callback_query.data[-2] == ">":
        i += 1
    elif callback_query.data[-2] == "<":
        i -= 1
    help(callback_query.message, i)
    return


@bot.message_handler(func=lambda message: "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞" in message.text.lower())
def send_doc(m):
    fin = open("users_questions.txt", "r")
    if str(m.chat.id) in fin.read():
        bot.send_message(m.chat.id, "–í—ã —É–∂–µ –∑–∞–¥–∞–ª–∏ –≤–æ–ø—Ä–æ—Å —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–µ, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞...")
        return
    bot.send_message(m.chat.id,
                         '–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏', reply_markup=markup)
    bot.register_next_step_handler(m, to_spec)
    return


def to_spec(m):
    fin = open("users_questions.txt", "r")
    if str(m.chat.id) not in fin.read():
        bot.send_message(m.chat.id, "–°–ø–∞—Å–∏–±–æ, —Å–∫–æ—Ä–æ –≤–∞–º –ø–æ—Å—Ç—É–ø–∏—Ç –æ—Ç–≤–µ—Ç –æ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤!")
        new_user = str(m.chat.id)+"\n"
        fin = open("users_questions.txt", "a")
        fin.write(new_user)
        fin.close()
        bot.send_message(admin, "*–í–æ–ø—Ä–æ—Å ‚Ññ"+str(m.chat.id)+":* " + m.text, parse_mode="Markdown")
        return


@bot.message_handler(func=lambda message: "–æ—Ç–≤–µ—Ç–∏—Ç" in message.text.lower())
def answer_spec(m):
    if m.chat.id != admin:
        we_dont_know(m)
        return
    else:
        markup_answer = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup_answer.add(types.KeyboardButton("–û—Ç–º–µ–Ω–∞ ‚ùå"))
        fin = open("users_questions.txt", "r")
        if fin.read() == "":
            bot.send_message(m.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç...")
            return
        fin = open("users_questions.txt", "r")
        lines = fin.read().split("\n")
        for i in lines:
            if i != "":
                item = types.KeyboardButton(str(i))
                markup_answer.add(item)
        fin.close()
        bot.send_message(m.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞:", reply_markup=markup_answer)
        bot.register_next_step_handler(m, send_answer)
        return


user_toansw = ""


def send_answer(m):
    if "–æ—Ç–º–µ–Ω–∞" in m.text.lower():
        bot.send_message(m.chat.id, "–û—Ç–º–µ–Ω–µ–Ω–æ ‚ùå", reply_markup=markup_admin)
        return
    global user_toansw
    user_toansw = m.text
    fin = open("users_questions.txt", "r")
    lines = fin.read().split("\n")
    if user_toansw not in lines:
        bot.send_message(m.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —Ç–∞–∫–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –Ω–µ—Ç –∏–ª–∏ –Ω–∞ –Ω–µ–≥–æ —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞...")
        bot.register_next_step_handler(m, send_answer)
        fin.close()
        return
    bot.send_message(m.chat.id, "–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç: ")
    bot.register_next_step_handler(m, send_answer2)
    return


def send_answer2(m):
    global user_toansw
    user = user_toansw
    bot.send_message(m.chat.id, "–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å ‚Ññ" + user, reply_markup=markup_admin)
    fin = open("users_questions.txt", "r")
    old_file = fin.read()
    new_file = old_file.replace(user + "\n", "")
    fin = open("users_questions.txt", "w")
    fin.write(new_file)
    fin.close()
    bot.send_message(user, "*–û—Ç–≤–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å:* " + m.text, parse_mode="Markdown")
    return


@bot.message_handler(func=lambda message: "–æ—Ç–≤–µ—Ç—ã –Ω–∞ " in message.text.lower())
def help(m, i=0):
    inline_kb1 = InlineKeyboardMarkup(row_width=2)
    if i == 0:
        inline_btn_2 = InlineKeyboardButton("‚û°", callback_data=">" + str(i))
        inline_kb1.add(inline_btn_2)
    elif i == len(useful_vars.faq) - 1:
        inline_btn_1 = InlineKeyboardButton("‚¨Ö", callback_data="<" + str(i))
        inline_kb1.add(inline_btn_1)
    else:
        inline_btn_1 = InlineKeyboardButton("‚¨Ö", callback_data="<" + str(i))
        inline_btn_2 = InlineKeyboardButton("‚û°", callback_data=">" + str(i))
        inline_kb1.add(inline_btn_1, inline_btn_2)
    bot.send_message(m.chat.id,
                     "‚≠ï*–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã*‚≠ï\n\nüî¥*–í–æ–ø—Ä–æ—Å:* " + useful_vars.faq[i][0] + "\n\nüîµ*–û—Ç–≤–µ—Ç:* " + useful_vars.faq[i][1], parse_mode="Markdown", reply_markup=inline_kb1)
    return


@bot.message_handler(func=lambda message: "–∫–≤–∞–Ω—Ç–æ—Ä–∏—É–º" in message.text.lower())
def camp(m):
    bot.send_message(m.chat.id,
                     '–ú—ã —Ç–∞–∫–æ–µ –Ω–µ –ª—é–±–∏–º...', parse_mode="Markdown")
    return


@bot.message_handler(func=lambda message: "—Å–æ—Ü—Å–µ—Ç" in message.text.lower())
def site_vk(m):
    bot.send_message(m.chat.id,
                     '*–ù–∞—à –í–ö* - https://vk.com/itcubevn', parse_mode="Markdown")
    bot.send_message(m.chat.id,
                     '*–ù–∞—à —Å–∞–π—Ç* - https://itcube-vn.ru/',
                     parse_mode="Markdown")
    return


@bot.message_handler(func=lambda message: "–æ—Ç–∑—ã–≤" in message.text.lower())
def site_vk(m):
    bot.send_message(m.chat.id,
                     '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤: ', parse_mode="Markdown")
    bot.register_next_step_handler(m, bot_send_feedback)
    return


def bot_send_feedback(m):
    bot.send_message(m.chat.id,
                     '–°–ø–∞—Å–∏–±–æ, –Ω–∞–º —ç—Ç–æ –≤–∞–∂–Ω–æ!', parse_mode="Markdown")
    bot.send_message(999985425, m.text)
    return


@bot.message_handler(func=None)
def we_dont_know(m):
    bot.send_message(m.chat.id,
                         '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é(((\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start...')
    return

while True:
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        bot.send_message(999985425, str(e))
        print(str(e))